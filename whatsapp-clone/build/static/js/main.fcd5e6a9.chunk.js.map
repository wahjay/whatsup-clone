{"version":3,"sources":["firebase.js","components/SidebarChat/SidebarChat.js","StateProvider.js","Reducer.js","LocalStorage.js","components/Sidebar/Sidebar.js","components/Chat/Chat.js","components/Login/Login.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","addNewChat","id","name","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","user","key","item","sessionStorage","getItem","JSON","parse","Date","getTime","exp","removeItem","displayName","photoURL","GetLocalStore","actionTypes","state","action","type","Sidebar","rooms","setRooms","dispatch","clickMore","setClickMore","unsubscribe","result","IconButton","signOut","then","curUser","catch","err","alert","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","res","scrollToBottom","length","element","document","getElementById","scrollTop","scrollHeight","clientHeight","timestamp","toDate","toLocaleString","style","marginRight","marginLeft","onSubmit","e","preventDefault","FieldValue","serverTimestamp","profilePic","onChange","target","Login","alt","Button","signInWithPopup","duration","now","setItem","stringify","SetLocalStore","email","App","path","component","exact","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fcd5e6a9.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB0JoV3-6Kg4YqOnpYdPOi3v7K53RWhUz4\",\n  authDomain: \"whatsapp-clone-78b77.firebaseapp.com\",\n  databaseURL: \"https://whatsapp-clone-78b77.firebaseio.com\",\n  projectId: \"whatsapp-clone-78b77\",\n  storageBucket: \"whatsapp-clone-78b77.appspot.com\",\n  messagingSenderId: \"984528169704\",\n  appId: \"1:984528169704:web:5fd2bf3f42d4472ab3b75d\",\n  measurementId: \"G-YQEF5HFK7H\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React, { useEffect, useState } from 'react';\nimport './SidebarChat.css';\nimport { Avatar } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport db from '../../firebase';\n\nexport default function SidebarChat({ addNewChat, id, name }) {\n  const [seed, setSeed] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    if(id) {\n      db.collection('rooms').doc(id).collection('messages')\n        .orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n          setMessages(snapshot.docs.map(doc => doc.data()))\n        ));\n    }\n  }, [id]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 6000));\n  }, [])\n\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat room\");\n\n    if(roomName) {\n      db.collection('rooms').add({\n        name: roomName,\n      });\n    }\n  };\n\n  return !addNewChat ? (\n    <Link to={`/rooms/${id}`}>\n      <div className=\"sidebarChat\">\n        <Avatar src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`} />\n        <div className=\"sidebarChat__info\">\n          <h2>{name}</h2>\n          <p>{messages[0]?.message}</p>\n        </div>\n      </div>\n    </Link>\n  ) : (\n    <div\n      onClick={createChat}\n      className=\"sidebarChat\">\n      <h2>Add New Chat</h2>\n    </div>\n  );\n}\n","import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\n// for subscriber components\nexport const useStateValue = () => useContext(StateContext);\n","import { GetLocalStore } from './LocalStorage';\n\nconst curUser = sessionStorage.getItem('curUser');\n\n/* initial state */\nexport const initialState = {\n  user: GetLocalStore(curUser),\n};\n\n/* possible action types */\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\n/* reducer */\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"," /* utilize sessionStorage to achieve authentication persistence. */\n\n// duration is in ms unit.\nconst SetLocalStore = (key, user, duration) => {\n    const now = new Date();\n    const item = {\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      exp: now.getTime() + duration,\n    }\n\n    sessionStorage.setItem(\"curUser\", key);\n    sessionStorage.setItem(key, JSON.stringify(item));\n}\n\nconst GetLocalStore = (key) => {\n  const item = sessionStorage.getItem(key);\n  if(!item) return null;\n\n  const user = JSON.parse(item);\n  const now = new Date();\n  if(now.getTime() > user.exp) {\n    sessionStorage.removeItem(key);\n    sessionStorage.removeItem(\"curUser\");\n\t\treturn null;\n  }\n\n  const obj = {\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n  }\n  return obj;\n}\n\nexport { SetLocalStore, GetLocalStore };\n","import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SidebarChat from '../SidebarChat/SidebarChat';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport db from '../../firebase';\nimport { useStateValue } from '../../StateProvider';\nimport { auth } from '../../firebase';\nimport { actionTypes } from '../../Reducer';\n\nexport default function Sidebar() {\n  const [rooms, setRooms] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n  const [clickMore, setClickMore] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = db.collection('rooms').onSnapshot(snapshot => {\n      const result = snapshot.docs.map(doc => ({\n          id: doc.id,\n          data: doc.data()\n      }));\n\n      setRooms(result);\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const signOut = () => {\n    auth.signOut()\n      .then(() => {\n        //remove the session cookies\n        const curUser = sessionStorage.getItem('curUser');\n        sessionStorage.removeItem('curUser');\n        curUser && sessionStorage.removeItem(curUser);\n\n        // update the global context\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: null,\n        });\n      })\n      .catch(err => alert(err.message));\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <IconButton>\n          <Avatar src={user?.photoURL} />\n        </IconButton>\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton onClick={() => setClickMore(clickMore => !clickMore)}>\n            <MoreVertIcon />\n          </IconButton>\n          {\n            clickMore &&\n            <div className=\"dropdown\">\n              <div className=\"option\" onClick={signOut}>\n                <ExitToAppIcon />\n                <button>Sign out</button>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchIcon />\n          <input placeholder=\"Search or start a new chat\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"sidebar__chats\">\n        <SidebarChat addNewChat/>\n        {\n          rooms.map(room => (\n            <SidebarChat\n              key={room.id}\n              id={room.id}\n              name={room.data.name}\n            />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { useStateValue } from '../../StateProvider';\nimport db from '../../firebase';\nimport firebase from 'firebase';\n\nexport default function Chat() {\n  const [seed, setSeed] = useState('');\n  const [input, setInput] = useState('');\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if(roomId) {\n      // fetch this room info\n      db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\n        setRoomName(snapshot.data().name)\n      ));\n\n      // fetch all the messages inside this room, order by ascending time (most recent at the bottom)\n      db.collection('rooms').doc(roomId).collection('messages')\n        .orderBy('timestamp', 'asc').onSnapshot(snapshot => {\n          const res = snapshot.docs.map(doc => doc.data());\n          setMessages(res);\n        });\n    }\n\n    setSeed(Math.floor(Math.random() * 6000));\n  }, [roomId]);\n\n  /* chat room scroll bar always start at the bottom and when new message comes in */\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages.length])\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    db.collection('rooms').doc(roomId).collection('messages')\n      .add({\n        message: input,\n        name: user.displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        profilePic: user.photoURL,\n      });\n\n    setInput('');\n  }\n\n  /* scroll the chat window to bottom */\n  const scrollToBottom = () => {\n    let element = document.getElementById(\"chat__window\");\n    element.scrollTop = element.scrollHeight - element.clientHeight;\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/gridy/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          <p>Last Seen: { messages.length > 0 &&\n            new Date(messages[messages.length-1].timestamp?.toDate()).toLocaleString()}\n          </p>\n        </div>\n\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchIcon />\n          </IconButton>\n          <IconButton>\n            <AttachFileIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"chat__body\" id=\"chat__window\">\n        {\n          messages.map(message => (\n            <div className=\"chat__messageContainer\">\n              <div className=\"chat__message\">\n                 { message.name !== user.displayName &&\n                   <Avatar src={user?.photoURL} style={{ marginRight: '10px' }} />\n                 }\n                <p className={`chat__messageInfo ${message.name === user.displayName && 'chat__receiver'}`}>\n                  <span className=\"chat__name\">\n                    {message.name}\n                  </span>\n                  {message.message}\n                </p>\n                { message.name === user.displayName &&\n                  <Avatar src={user?.photoURL} style={{ marginLeft: '10px' }} />\n                }\n              </div>\n              <span className={`chat__timestamp ${message.name === user.displayName && 'chat__receiverTimestamp'}`}>\n                {new Date(message.timestamp?.toDate()).toLocaleString()}\n              </span>\n            </div>\n          ))\n        }\n      </div>\n\n      <div className=\"chat__footer\">\n        <IconButton>\n          <InsertEmoticonIcon />\n        </IconButton>\n        <form onSubmit={sendMessage}>\n          <input value={input} type=\"text\" placeholder=\"Got something to say?\" onChange={e => setInput(e.target.value)}/>\n          <button type=\"submit\">Send a message</button>\n        </form>\n        <IconButton>\n          <MicIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Button } from \"@material-ui/core\";\nimport './Login.css';\nimport { auth, provider } from '../../firebase';\nimport { useStateValue } from '../../StateProvider';\nimport { actionTypes } from '../../Reducer';\nimport { SetLocalStore } from '../../LocalStorage';\n\nexport default function Login() {\n  const [{}, dispatch] = useStateValue();\n\n  const signIn = () => {\n    auth.signInWithPopup(provider)\n      .then(res => {\n        const _2hrs = 2 * 60 * 60 * 1000;\n        SetLocalStore(res.user.email, res.user, _2hrs);\n\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: res.user,\n        });\n      })\n      .catch(err => alert(err.message));\n  }\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\"\n          alt=\"WhatsApp logo\"\n        />\n\n        <div className=\"login__text\">\n          <h1>Sign in to WhatsApp</h1>\n        </div>\n\n        <Button onClick={signIn}>\n          Sign In With Google\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Chat from './components/Chat/Chat';\nimport Login from './components/Login/Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      { user ?\n        <div className=\"app__body\">\n        <Router>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\" component={Chat} />\n            <Route path=\"/\" exact />\n          </Switch>\n        </Router>\n        </div>\n        : <Login />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './Reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}